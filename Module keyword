-------------------------------------------------
To get the last name of a file path, like ‘foo.txt’ out of ‘/etc/asdf/foo.txt’:
{{ path | basename }}
-----------------------------
Special Variables  -- i.e inventory_hostname, groups, role_path, playbook_dir, ansible_loop_var, hostvars
https://docs.ansible.com/ansible/latest/reference_appendices/special_variables.html#special-variables
Return Values  --- i.e rc, msg, stdout, stdout_lines
https://docs.ansible.com/ansible/latest/reference_appendices/common_return_values.html
-----------------------------
local_action
delegate_to
delegate_to: "{{ groups[CLOUD_PROVIDER + '-' + KUBERNETES_CLUSTER_PREFIX + '-vmss-master'][0] | default('') }}"
------------------------------
run_once: True
register: 
-----------------------------
-----------------------------
Module:-
tempfile

- name: use the registered var and the file module to remove the temporary file
  file:
    path: "{{ heptioContour.path }}"
    state: absent
  when: heptioContour.path is defined

assert – Asserts given expressions are true
htpasswd
cron
block
stat
fetch
setup – Gathers facts about remote hosts
wait_for_connection – Waits until remote system is reachable/usable
service_facts – Return service state information as fact data
--
when: '"vmss" not in inventory_hostname'
inventory_hostname ---The inventory name for the ‘current’ host being iterated over in the play
--
---------------------------------------------------------
********************************
-----Looping over inventory---
********************************
To loop over your inventory, or just a subset of it, you can use a regular loop with the ansible_play_batch or groups variables:

# show all the hosts in the inventory
- debug:
    msg: "{{ item }}"
  loop: "{{ groups['all'] }}"

# show all the hosts in the current play
- debug:
    msg: "{{ item }}"
  loop: "{{ ansible_play_batch }}"
-------
  You use a pattern almost any time you execute an ad-hoc command or a playbook
  
-----
  loop: "{{ groups['azure-hosts'] }}"
  when: '"vmss" not in item'
------
---------------------------------------------------------
  - name: Check if ipsec is running.
    command: systemctl status ipsec
    register: OS_IPSEC_STATUS

  - name: Reload ipsec policies
    shell: systemctl reload ipsec
    when: OS_IPSEC_STATUS.rc == 0
    
rc == 0 means command executed successfully.

----------------------------------------------------------

  

